<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- 父项目的坐标:如果项目中没有规定某个元素的值,那么父项目中的对应值即为项目的默认值. 坐标包括group ID,artifact ID和
        version. -->
    <modelVersion>4.0.0</modelVersion>								<!--声明项目描述符遵循哪一个POM模型版本.模型本身的版本很少改变,虽然如此,但它仍然是必不可少的,这是为了当Maven引入了新的特性或者其他模型变更的时候,确保稳定性. -->
    <groupId>com.jjh</groupId>	    				<!--项目的全球唯一标识符,通常使用全限定的包名区分该项目和其他项目.并且构建时生成的路径也是由此生成, 如com.mycompany.app生成的相对路径为:/com/mycompany/app. -->
    <artifactId>jjh-parent</artifactId>							<!--被继承的父项目的构件标识符. -->
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>java</module>
    </modules>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>                                <!--项目当前版本,格式为:主版本.次版本.增量版本-限定版本号. -->
    <packaging>pom</packaging>										<!--项目产生的构件类型,例如jar,war,ear,pom.插件可以创建他们自己的构件类型,所以前面列的不是全部构件类型. -->
    <name>jjh</name>											<!--项目的名称,Maven产生的文档用. -->
    <url>http://maven.apache.org</url>     		  					<!--项目主页的URL,Maven产生的文档用. -->
    <description>SomeDemo -- 父模块</description>		<!--项目描述信息. -->

    <!-- 项目属性 -->
    <properties>
    <!-- main version setting -->
    <junit.version>4.12</junit.version>
        <!-- environment version setting -->
        <jdk.version>1.8</jdk.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <morning.version>3.0.0-SNAPSHOT</morning.version>
        <package.environment>dev</package.environment>

    </properties>

    <!-- 设定主仓库，按设定顺序进行查找。 -->
    <repositories>
        <repository>
            <id>nexus-aliyun</id>
            <name>Nexus aliyun</name>
            <layout>default</layout>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <!-- 设定插件仓库 -->
    <pluginRepositories>
        <pluginRepository>
            <id>nexus-aliyun</id>
            <name>Nexus aliyun</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- dependencyManagement里只是声明依赖,并不实现引入,因此子项目需要显示的声明需要用的依赖. -->
    <dependencyManagement>
        <dependencies>
            <!-- 1.TEST:单元测试框架 begin√ -->
            <dependency>
                <groupId>junit</groupId>         		<!--依赖的group ID -->
                <artifactId>junit</artifactId>   		<!--依赖的artifact ID -->
                <version>${junit.version}</version> 	<!--依赖的版本号. 在Maven 2里, 也可以配置成版本号的范围. -->
            </dependency>
            <!-- TEST end -->
        </dependencies>
    </dependencyManagement>
</project>